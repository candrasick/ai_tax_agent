"""add us_code_section_revised table

Revision ID: 369c83f5e6e4
Revises: 721ddd5d70a2
Create Date: 2025-04-18 14:39:21.019183

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '369c83f5e6e4'
down_revision: Union[str, None] = '721ddd5d70a2'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('form_fields', schema=None) as batch_op:
        batch_op.alter_column('field_label', existing_type=sa.VARCHAR(length=100), nullable=True)
        batch_op.create_index('ix_form_fields_field_label', ['field_label'], unique=False)

    with op.batch_alter_table('section_complexity', schema=None) as batch_op:
        batch_op.drop_index('ix_section_complexity_section_id')
        batch_op.create_index(batch_op.f('ix_section_complexity_section_id'), ['section_id'], unique=True)

    with op.batch_alter_table('section_impact', schema=None) as batch_op:
        batch_op.drop_index('ix_section_impact_section_id')
        batch_op.create_index(batch_op.f('ix_section_impact_section_id'), ['section_id'], unique=True)

    op.create_table('us_code_section_revised',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('orig_section_id', sa.Integer(), nullable=False),
    sa.Column('version', sa.Integer(), nullable=False),
    sa.Column('deleted', sa.Boolean(), nullable=False, server_default=sa.false()),
    sa.Column('subtitle', sa.Text(), nullable=True),
    sa.Column('chapter', sa.Text(), nullable=True),
    sa.Column('subchapter', sa.Text(), nullable=True),
    sa.Column('part', sa.Text(), nullable=True),
    sa.Column('section_number', sa.Text(), nullable=False),
    sa.Column('section_title', sa.Text(), nullable=True),
    sa.Column('core_text', sa.Text(), nullable=True),
    sa.Column('revised_complexity', sa.Float(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['orig_section_id'], ['us_code_section.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('orig_section_id', 'version', name='uq_orig_section_version')
    )
    op.create_index(op.f('ix_us_code_section_revised_orig_section_id'), 'us_code_section_revised', ['orig_section_id'], unique=False)
    op.create_index(op.f('ix_us_code_section_revised_version'), 'us_code_section_revised', ['version'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_us_code_section_revised_version'), table_name='us_code_section_revised')
    op.drop_index(op.f('ix_us_code_section_revised_orig_section_id'), table_name='us_code_section_revised')
    op.drop_table('us_code_section_revised')
    
    with op.batch_alter_table('section_impact', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_section_impact_section_id'))

    with op.batch_alter_table('section_complexity', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_section_complexity_section_id'))

    with op.batch_alter_table('form_fields', schema=None) as batch_op:
        batch_op.drop_index('ix_form_fields_field_label')
    # ### end Alembic commands ###
